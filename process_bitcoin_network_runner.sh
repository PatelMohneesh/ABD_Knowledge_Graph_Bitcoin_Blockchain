# This code processes binary-format Bitcoin .dat files generated by the Bitcoin client (http://bitcoin.org/
# We use tools developed by Martin Harrigan (https://github.com/harrigan/bitcointools) to convert the .dat files into user readable format.

#

start=$(date +%s)
file_path=~/output/ #path of output files
lib_path=~/Documents/bitcointools/ #path of bitcointools with trailing slash (with --all-transactions functionality) 
transactions_in="bitcoin_transactions.txt" #raw file saved from bitcointools
transaction_keys="bitcoin_transactionkey_list.txt"  #key strings of transactions
pub_keys="bitcoin_pubkey_list.txt" #key strings of pubkeys
users_out="bitcoin_userkey_list.txt" #grouping of pubkeys into "users" (see: Reid and Harrigan 2011)
referents_out="bitcoin_user_edge_inputs.txt" #transaction keys of claimed inputs per transaction
referent_public_keys_out="bitcoin_user_edge_input_public_keys.txt" #public keys of claimed inputs per transaction
edges_out="bitcoin_user_edges.txt" #main data file

#extract data using 
python ${lib_path}"dbdump.py" --all-transactions > ${file_path}${transactions_in}  #using harrigan's library to raw text
echo "Completed: writing raw transaction file"

python process_bitcoin_network.py ${file_path}${transactions_in} ${file_path}${transaction_keys} ${file_path}${pub_keys} ${file_path}${users_out} ${file_path}${referents_out} ${file_path}${referent_public_keys_out} ${file_path}${edges_out} ${file_path}
end=$(date +%s)
diff=$(( $end - $start ))
echo "Completed execution in $diff seconds"
 